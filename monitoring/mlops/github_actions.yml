name: MLops-CI-CD-Pipeline

on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:
    branches:
      - main
      - 'release/*'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          pytest tests/

      - name: C++ build
        run: |
          sudo apt-get update
          sudo apt-get install g++
          g++ -o preprocess data/scripts/cpp_preprocess.cpp
          g++ -o augment data/scripts/cpp_augment.cpp
          g++ -o inference models/cpp_inference.cpp
          g++ -o custom_layer models/architectures/custom_layer.cpp
          ./preprocess
          ./augment
          ./inference

  train:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run training
        run: |
          python models/train.py

      - name: Upload model artifacts
        uses: actions/upload-artifact@v3
        with:
          name: trained-model
          path: |
            models/pretrained/resnet50.pth
            models/pretrained/mobilenet_v2.h5
            models/pretrained/efficientnet.onnx

  deploy:
    runs-on: ubuntu-latest
    needs: train
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download model artifacts
        uses: actions/download-artifact@v3
        with:
          name: trained-model

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/mlops-model:latest deployment/docker/.

      - name: Push Docker image to repository
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/mlops-model:latest

      - name: Deploy to AWS
        run: |
          python deployment/scripts/deploy_aws.py

  monitoring:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run monitoring scripts
        run: |
          python monitoring/metrics/monitor.py
          python monitoring/metrics/alerts.py

      - name: Upload monitoring logs
        uses: actions/upload-artifact@v3
        with:
          name: monitoring-logs
          path: |
            monitoring/logs/